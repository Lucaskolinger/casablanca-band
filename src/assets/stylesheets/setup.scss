$accent-color: #d51b4c;

$bp-sm: 600px;
$bp-md: 900px;
$bp-lg: 1200px;
$bp-xl: 1800px;

$breakpoints: (
  small: 600px,
  medium: 900px,
  large: 1200px,
  xlarge: 1800px,
);

$p-font-sizes: (
  null: (
    0.9375rem,
    1.3,
  ),
  small: (
    1rem,
    1.3,
  ),
  medium: (
    1.0625rem,
    1.4,
  ),
  large: (
    1.1875rem,
    1.45,
  ),
  xlarge: (
    1.1875rem,
    1.45,
  ),
);

$h2-font-sizes: (
  null: (
    1.2rem,
    1.3,
  ),
  small: (
    1.5rem,
    1.3,
  ),
  medium: (
    1.5rem,
    1.4,
  ),
  large: (
    2rem,
    1.45,
  ),
  xlarge: (
    2rem,
    1.45,
  ),
);

$btn-font-sizes: (
  null: (
    0.8rem,
    1.3,
  ),
  small: (
    1.5rem,
    1.3,
  ),
  medium: (
    1.5rem,
    1.4,
  ),
  large: (
    2rem,
    1.45,
  ),
  xlarge: (
    2rem,
    1.45,
  ),
);

@mixin font-size($fs-map, $fs-breakpoints: $breakpoints) {
  @each $fs-breakpoint, $fs-font-size in $fs-map {
    @if $fs-breakpoint == null {
      @include make-font-size($fs-font-size);
    } @else {
      // If $fs-font-size is a key that exists in
      // $fs-breakpoints, use the value
      @if map-has-key($fs-breakpoints, $fs-breakpoint) {
        $fs-breakpoint: map-get($fs-breakpoints, $fs-breakpoint);
      }
      @media screen and (min-width: $fs-breakpoint) {
        @include make-font-size($fs-font-size);
      }
    }
  }
}

// Utility function for mixin font-size
@mixin make-font-size($fs-font-size) {
  // If $fs-font-size is a list, include
  // both font-size and line-height
  @if type-of($fs-font-size) == "list" {
    font-size: nth($fs-font-size, 1);
    @if (length($fs-font-size) > 1) {
      line-height: nth($fs-font-size, 2);
    }
  } @else {
    font-size: $fs-font-size;
  }
}
